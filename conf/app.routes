# microservice specific routes

->         /hmrc-frontend                                                  hmrcfrontend.Routes

GET        /                                                               controllers.ReturnsDashboardController.onPageLoad

GET        /assets/*file                                                   controllers.Assets.versioned(path="/public", file: Asset)

GET        /sign-in                                                        controllers.auth.AuthenticationController.signIn()
GET        /sign-out                                                       controllers.auth.AuthenticationController.signOut()

GET        /time-out                                                       controllers.auth.AuthenticationController.timeOut()

GET        /refresh-session                                                controllers.KeepAliveController.keepAlive

GET        /there-is-a-problem                                             controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET        /check-your-answers                                             controllers.CheckYourAnswersController.onPageLoad(isPrint: Boolean)

GET        /unauthorised                                                   controllers.UnauthorisedController.onPageLoad

GET        /returnsDashboard                                               controllers.ReturnsDashboardController.onPageLoad()

GET        /pay-your-digital-services-tax                                  controllers.PayYourDigitalServiceTaxController.onPageLoad()

GET        /:periodKey/manage-companies/add/:index/company                 controllers.CompanyDetailsController.onPageLoad(periodKey: String, index: Index, mode: Mode = NormalMode)
POST       /:periodKey/manage-companies/add/:index/company                 controllers.CompanyDetailsController.onSubmit(periodKey: String, index: Index, mode: Mode = NormalMode)
GET        /:periodKey/manage-companies/delete/:index/company              controllers.CompanyDetailsController.onDelete(periodKey: String, index: Index, mode: Mode = NormalMode)

GET        /:periodKey/manage-companies/edit/:index/company                controllers.CompanyDetailsController.onPageLoad(periodKey: String, index: Index, mode: Mode = CheckMode)
POST       /:periodKey/manage-companies/edit/:index/company                controllers.CompanyDetailsController.onSubmit(periodKey: String, index: Index, mode: Mode = CheckMode)
GET        /:periodKey/manage-companies/delete/:index/company              controllers.CompanyDetailsController.onDelete(periodKey: String, index: Index, mode: Mode = CheckMode)

GET        /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onSubmit(periodKey: String, mode: Mode = CheckMode)
GET        /:periodKey/manage-companies/redirect                           controllers.ManageCompaniesController.redirectToOnLoadPage(periodKey: String)

GET        /:periodKey/select-activities                                   controllers.SelectActivitiesController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/select-activities                                   controllers.SelectActivitiesController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/select-activities                              controllers.SelectActivitiesController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/select-activities                              controllers.SelectActivitiesController.onSubmit(periodKey: String, mode: Mode = CheckMode)

GET        /:periodKey/report-social-media-alternative-charge              controllers.ReportMediaAlternativeChargeController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/report-social-media-alternative-charge              controllers.ReportMediaAlternativeChargeController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-social-media-alternative-charge         controllers.ReportMediaAlternativeChargeController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-social-media-alternative-charge         controllers.ReportMediaAlternativeChargeController.onSubmit(periodKey: String, mode: Mode = CheckMode)

GET        /:periodKey/report-social-media-loss                            controllers.SocialMediaLossController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/report-social-media-loss                            controllers.SocialMediaLossController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-social-media-loss                       controllers.SocialMediaLossController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-social-media-loss                       controllers.SocialMediaLossController.onSubmit(periodKey: String, mode: Mode = CheckMode)

GET        /report-online-marketplace-alternative-charge                   controllers.ReportOnlineMarketplaceAlternativeChargeController.onPageLoad(mode: Mode = NormalMode)
POST       /report-online-marketplace-alternative-charge                   controllers.ReportOnlineMarketplaceAlternativeChargeController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-online-marketplace-alternative-charge              controllers.ReportOnlineMarketplaceAlternativeChargeController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-online-marketplace-alternative-charge              controllers.ReportOnlineMarketplaceAlternativeChargeController.onSubmit(mode: Mode = CheckMode)


GET        /report-search-engine-alternative-charge                        controllers.ReportSearchAlternativeChargeController.onPageLoad(mode: Mode = NormalMode)
POST       /report-search-engine-alternative-charge                        controllers.ReportSearchAlternativeChargeController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-search-engine-alternative-charge                   controllers.ReportSearchAlternativeChargeController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-search-engine-alternative-charge                   controllers.ReportSearchAlternativeChargeController.onSubmit(mode: Mode = CheckMode)


GET        /cross-border-transaction-relief-amount                         controllers.CrossBorderTransactionReliefController.onPageLoad(mode: Mode = NormalMode)
POST       /cross-border-transaction-relief-amount                         controllers.CrossBorderTransactionReliefController.onSubmit(mode: Mode = NormalMode)
GET        /edit/cross-border-transaction-relief-amount                    controllers.CrossBorderTransactionReliefController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/cross-border-transaction-relief-amount                    controllers.CrossBorderTransactionReliefController.onSubmit(mode: Mode = CheckMode)

GET        /:periodKey/report-alternative-charge                           controllers.ReportAlternativeChargeController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/report-alternative-charge                           controllers.ReportAlternativeChargeController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-alternative-charge                      controllers.ReportAlternativeChargeController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-alternative-charge                      controllers.ReportAlternativeChargeController.onSubmit(periodKey: String, mode: Mode = CheckMode)


GET        /report-online-marketplace-loss                                  controllers.ReportOnlineMarketplaceLossController.onPageLoad(mode: Mode = NormalMode)
POST       /report-online-marketplace-loss                                  controllers.ReportOnlineMarketplaceLossController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-online-marketplace-loss                             controllers.ReportOnlineMarketplaceLossController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-online-marketplace-loss                             controllers.ReportOnlineMarketplaceLossController.onSubmit(mode: Mode = CheckMode)

GET        /report-cross-border-transaction-relief                         controllers.ReportCrossBorderReliefController.onPageLoad(mode: Mode = NormalMode)
POST       /report-cross-border-transaction-relief                         controllers.ReportCrossBorderReliefController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-cross-border-transaction-relief                    controllers.ReportCrossBorderReliefController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-cross-border-transaction-relief                    controllers.ReportCrossBorderReliefController.onSubmit(mode: Mode = CheckMode)

GET        /:periodKey/report-search-engine-loss                           controllers.SearchEngineLossController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/report-search-engine-loss                           controllers.SearchEngineLossController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-search-engine-loss                      controllers.SearchEngineLossController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-search-engine-loss                      controllers.SearchEngineLossController.onSubmit(periodKey: String, mode: Mode = CheckMode)

GET        /:periodKey/allowance-deducted                                  controllers.AllowanceDeductedController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/allowance-deducted                                  controllers.AllowanceDeductedController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/allowance-deducted                             controllers.AllowanceDeductedController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/allowance-deducted                             controllers.AllowanceDeductedController.onSubmit(periodKey: String, mode: Mode = CheckMode)

GET        /uk-bank-details                                                controllers.UKBankDetailsController.onPageLoad(mode: Mode = NormalMode)
POST       /uk-bank-details                                                controllers.UKBankDetailsController.onSubmit(mode: Mode = NormalMode)
GET        /edit/uk-bank-details                                           controllers.UKBankDetailsController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/uk-bank-details                                           controllers.UKBankDetailsController.onSubmit(mode: Mode = CheckMode)

GET        /:periodKey/company-liabilities/:index/                         controllers.CompanyLiabilitiesController.onPageLoad(periodKey: String, mode: Mode = NormalMode, index:Index)
POST       /:periodKey/company-liabilities/:index/                         controllers.CompanyLiabilitiesController.onSubmit(periodKey: String, mode: Mode = NormalMode, index:Index)
GET        /:periodKey/edit/company-liabilities/:index/                    controllers.CompanyLiabilitiesController.onPageLoad(periodKey: String, mode: Mode = CheckMode, index:Index)
POST       /:periodKey/edit/company-liabilities/:index/                    controllers.CompanyLiabilitiesController.onSubmit(periodKey: String, mode: Mode = CheckMode, index:Index)

GET        /is-repayment-bank-account-uk                                   controllers.IsRepaymentBankAccountUKController.onPageLoad(mode: Mode = NormalMode)
POST       /is-repayment-bank-account-uk                                   controllers.IsRepaymentBankAccountUKController.onSubmit(mode: Mode = NormalMode)
GET        /edit/is-repayment-bank-account-uk                              controllers.IsRepaymentBankAccountUKController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/is-repayment-bank-account-uk                              controllers.IsRepaymentBankAccountUKController.onSubmit(mode: Mode = CheckMode)

GET        /bank-details-for-repayment                                     controllers.BankDetailsForRepaymentController.onPageLoad(mode: Mode = NormalMode)
POST       /bank-details-for-repayment                                     controllers.BankDetailsForRepaymentController.onSubmit(mode: Mode = NormalMode)
GET        /edit/bank-details-for-repayment                                controllers.BankDetailsForRepaymentController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/bank-details-for-repayment                                controllers.BankDetailsForRepaymentController.onSubmit(mode: Mode = CheckMode)

GET        /group-liability                                                controllers.GroupLiabilityController.onPageLoad(mode: Mode = NormalMode)
POST       /group-liability                                                controllers.GroupLiabilityController.onSubmit(mode: Mode = NormalMode)
GET        /edit/group-liability                                           controllers.GroupLiabilityController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/group-liability                                           controllers.GroupLiabilityController.onSubmit(mode: Mode = CheckMode)

GET        /repayment                                                      controllers.RepaymentController.onPageLoad(mode: Mode = NormalMode)
POST       /repayment                                                      controllers.RepaymentController.onSubmit(mode: Mode = NormalMode)
GET        /edit/repayment                                                 controllers.RepaymentController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/repayment                                                 controllers.RepaymentController.onSubmit(mode: Mode = CheckMode)

GET        /returns/complete                                               controllers.ReturnsCompleteController.onPageLoad()

GET        /report-online-marketplace-operating-margin                     controllers.ReportOnlineMarketplaceOperatingMarginController.onPageLoad(mode: Mode = NormalMode)
POST       /report-online-marketplace-operating-margin                     controllers.ReportOnlineMarketplaceOperatingMarginController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-online-marketplace-operating-margin                controllers.ReportOnlineMarketplaceOperatingMarginController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-online-marketplace-operating-margin                controllers.ReportOnlineMarketplaceOperatingMarginController.onSubmit(mode: Mode = CheckMode)

GET        /:periodKey/report-social-media-operating-margin                controllers.ReportSocialMediaOperatingMarginController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/report-social-media-operating-margin                controllers.ReportSocialMediaOperatingMarginController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-social-media-operating-margin           controllers.ReportSocialMediaOperatingMarginController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-social-media-operating-margin           controllers.ReportSocialMediaOperatingMarginController.onSubmit(periodKey: String, mode: Mode = CheckMode)

GET        /relief-deducted                                                controllers.ReliefDeductedController.onPageLoad(mode: Mode = NormalMode)
POST       /relief-deducted                                                controllers.ReliefDeductedController.onSubmit(mode: Mode = NormalMode)
GET        /edit/relief-deducted                                           controllers.ReliefDeductedController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/relief-deducted                                           controllers.ReliefDeductedController.onSubmit(mode: Mode = CheckMode)

GET        /:periodKey/report-search-engine-operating-margin               controllers.ReportSearchEngineOperatingMarginController.onPageLoad(periodKey: String, mode: Mode = NormalMode)
POST       /:periodKey/report-search-engine-operating-margin               controllers.ReportSearchEngineOperatingMarginController.onSubmit(periodKey: String, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-search-engine-operating-margin          controllers.ReportSearchEngineOperatingMarginController.onPageLoad(periodKey: String, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-search-engine-operating-margin          controllers.ReportSearchEngineOperatingMarginController.onSubmit(periodKey: String, mode: Mode = CheckMode)
