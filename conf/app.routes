# microservice specific routes

->         /hmrc-frontend                                       hmrcfrontend.Routes

GET        /                                                    controllers.ReturnsDashboardController.onPageLoad

GET        /assets/*file                                        controllers.Assets.versioned(path="/public", file: Asset)

GET        /sign-in                                             controllers.auth.AuthenticationController.signIn()
GET        /sign-out                                            controllers.auth.AuthenticationController.signOut()

GET        /time-out                                            controllers.auth.AuthenticationController.timeOut()

GET        /refresh-session                                     controllers.KeepAliveController.keepAlive

GET        /there-is-a-problem                                  controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET        /check-your-answers                                  controllers.CheckYourAnswersController.onPageLoad(isPrint: Boolean)

GET        /unauthorised                                        controllers.UnauthorisedController.onPageLoad

GET        /returnsDashboard                                    controllers.ReturnsDashboardController.onPageLoad()

GET        /pay-your-digital-services-tax                       controllers.PayYourDigitalServiceTaxController.onPageLoad()

GET        /manage-companies/add/:index/company                 controllers.CompanyDetailsController.onPageLoad(index: Index, mode: Mode = NormalMode)
POST       /manage-companies/add/:index/company                 controllers.CompanyDetailsController.onSubmit(index: Index, mode: Mode = NormalMode)
GET        /manage-companies/delete/:index/company              controllers.CompanyDetailsController.onDelete(index: Index, mode: Mode = NormalMode)

GET        /manage-companies/edit/:index/company                controllers.CompanyDetailsController.onPageLoad(index: Index, mode: Mode = CheckMode)
POST       /manage-companies/edit/:index/company                controllers.CompanyDetailsController.onSubmit(index: Index, mode: Mode = CheckMode)
GET        /manage-companies/delete/:index/company              controllers.CompanyDetailsController.onDelete(index: Index, mode: Mode = CheckMode)

GET        /manage-companies                                    controllers.ManageCompaniesController.onPageLoad(mode: Mode = NormalMode)
POST       /manage-companies                                    controllers.ManageCompaniesController.onSubmit(mode: Mode = NormalMode)
GET        /manage-companies                                    controllers.ManageCompaniesController.onPageLoad(mode: Mode = CheckMode)
POST       /manage-companies                                    controllers.ManageCompaniesController.onSubmit(mode: Mode = CheckMode)
GET        /manage-companies/redirect                           controllers.ManageCompaniesController.redirectToOnLoadPage()

GET        /select-activities                                   controllers.SelectActivitiesController.onPageLoad(mode: Mode = NormalMode)
POST       /select-activities                                   controllers.SelectActivitiesController.onSubmit(mode: Mode = NormalMode)
GET        /edit/select-activities                              controllers.SelectActivitiesController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/select-activities                              controllers.SelectActivitiesController.onSubmit(mode: Mode = CheckMode)

GET        /report-social-media-alternative-charge              controllers.ReportMediaAlternativeChargeController.onPageLoad(mode: Mode = NormalMode)
POST       /report-social-media-alternative-charge              controllers.ReportMediaAlternativeChargeController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-social-media-alternative-charge         controllers.ReportMediaAlternativeChargeController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-social-media-alternative-charge         controllers.ReportMediaAlternativeChargeController.onSubmit(mode: Mode = CheckMode)

GET        /report-social-media-loss                            controllers.SocialMediaLossController.onPageLoad(mode: Mode = NormalMode)
POST       /report-social-media-loss                            controllers.SocialMediaLossController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-social-media-loss                       controllers.SocialMediaLossController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-social-media-loss                       controllers.SocialMediaLossController.onSubmit(mode: Mode = CheckMode)

GET        /report-online-marketplace-alternative-charge        controllers.ReportOnlineMarketplaceAlternativeChargeController.onPageLoad(mode: Mode = NormalMode)
POST       /report-online-marketplace-alternative-charge        controllers.ReportOnlineMarketplaceAlternativeChargeController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-online-marketplace-alternative-charge   controllers.ReportOnlineMarketplaceAlternativeChargeController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-online-marketplace-alternative-charge   controllers.ReportOnlineMarketplaceAlternativeChargeController.onSubmit(mode: Mode = CheckMode)


GET        /report-search-alternative-charge                    controllers.ReportSearchAlternativeChargeController.onPageLoad(mode: Mode = NormalMode)
POST       /report-search-alternative-charge                    controllers.ReportSearchAlternativeChargeController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-search-alternative-charge               controllers.ReportSearchAlternativeChargeController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-search-alternative-charge               controllers.ReportSearchAlternativeChargeController.onSubmit(mode: Mode = CheckMode)


GET        /cross-border-transaction-relief-amount              controllers.CrossBorderTransactionReliefController.onPageLoad(mode: Mode = NormalMode)
POST       /cross-border-transaction-relief-amount              controllers.CrossBorderTransactionReliefController.onSubmit(mode: Mode = NormalMode)
GET        /edit/cross-border-transaction-relief-amount         controllers.CrossBorderTransactionReliefController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/cross-border-transaction-relief-amount         controllers.CrossBorderTransactionReliefController.onSubmit(mode: Mode = CheckMode)

GET        /report-alternative-charge                           controllers.ReportAlternativeChargeController.onPageLoad(mode: Mode = NormalMode)
POST       /report-alternative-charge                           controllers.ReportAlternativeChargeController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-alternative-charge                      controllers.ReportAlternativeChargeController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-alternative-charge                      controllers.ReportAlternativeChargeController.onSubmit(mode: Mode = CheckMode)


GET        /report-online-marketplace-loss                        controllers.ReportOnlineMarketplaceLossController.onPageLoad(mode: Mode = NormalMode)
POST       /report-online-marketplace-loss                        controllers.ReportOnlineMarketplaceLossController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-online-marketplace-loss                  controllers.ReportOnlineMarketplaceLossController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-online-marketplace-loss                  controllers.ReportOnlineMarketplaceLossController.onSubmit(mode: Mode = CheckMode)

GET        /report-cross-border-transaction-relief              controllers.ReportCrossBorderReliefController.onPageLoad(mode: Mode = NormalMode)
POST       /report-cross-border-transaction-relief              controllers.ReportCrossBorderReliefController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-cross-border-transaction-relief         controllers.ReportCrossBorderReliefController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-cross-border-transaction-relief         controllers.ReportCrossBorderReliefController.onSubmit(mode: Mode = CheckMode)

GET        /report-search-engine-loss                           controllers.SearchEngineLossController.onPageLoad(mode: Mode = NormalMode)
POST       /report-search-engine-loss                           controllers.SearchEngineLossController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-search-engine-loss                      controllers.SearchEngineLossController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-search-engine-loss                      controllers.SearchEngineLossController.onSubmit(mode: Mode = CheckMode)

GET        /allowance-deducted                                  controllers.AllowanceDeductedController.onPageLoad(mode: Mode = NormalMode)
POST       /allowance-deducted                                  controllers.AllowanceDeductedController.onSubmit(mode: Mode = NormalMode)
GET        /edit/allowance-deducted                             controllers.AllowanceDeductedController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/allowance-deducted                             controllers.AllowanceDeductedController.onSubmit(mode: Mode = CheckMode)

GET        /uk-bank-details                                     controllers.UKBankDetailsController.onPageLoad(mode: Mode = NormalMode)
POST       /uk-bank-details                                     controllers.UKBankDetailsController.onSubmit(mode: Mode = NormalMode)
GET        /edit/uk-bank-details                                controllers.UKBankDetailsController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/uk-bank-details                                controllers.UKBankDetailsController.onSubmit(mode: Mode = CheckMode)

GET        /:index/company-liabilities                          controllers.CompanyLiabilitiesController.onPageLoad(mode: Mode = NormalMode, index:Index)
POST       /:index/company-liabilities                          controllers.CompanyLiabilitiesController.onSubmit(mode: Mode = NormalMode, index:Index)
GET        /:index/edit/company-liabilities                     controllers.CompanyLiabilitiesController.onPageLoad(mode: Mode = CheckMode, index:Index)
POST       /:index/edit/company-liabilities                     controllers.CompanyLiabilitiesController.onSubmit(mode: Mode = CheckMode, index:Index)

GET        /is-repayment-bank-account-uk                        controllers.IsRepaymentBankAccountUKController.onPageLoad(mode: Mode = NormalMode)
POST       /is-repayment-bank-account-uk                        controllers.IsRepaymentBankAccountUKController.onSubmit(mode: Mode = NormalMode)
GET        /edit/is-repayment-bank-account-uk                   controllers.IsRepaymentBankAccountUKController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/is-repayment-bank-account-uk                   controllers.IsRepaymentBankAccountUKController.onSubmit(mode: Mode = CheckMode)

GET        /bank-details-for-repayment                          controllers.BankDetailsForRepaymentController.onPageLoad(mode: Mode = NormalMode)
POST       /bank-details-for-repayment                          controllers.BankDetailsForRepaymentController.onSubmit(mode: Mode = NormalMode)
GET        /edit/bank-details-for-repayment                     controllers.BankDetailsForRepaymentController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/bank-details-for-repayment                     controllers.BankDetailsForRepaymentController.onSubmit(mode: Mode = CheckMode)

GET        /group-liability                                     controllers.GroupLiabilityController.onPageLoad(mode: Mode = NormalMode)
POST       /group-liability                                     controllers.GroupLiabilityController.onSubmit(mode: Mode = NormalMode)
GET        /edit/group-liability                                controllers.GroupLiabilityController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/group-liability                                controllers.GroupLiabilityController.onSubmit(mode: Mode = CheckMode)

GET        /repayment                                           controllers.RepaymentController.onPageLoad(mode: Mode = NormalMode)
POST       /repayment                                           controllers.RepaymentController.onSubmit(mode: Mode = NormalMode)
GET        /edit/repayment                                      controllers.RepaymentController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/repayment                                      controllers.RepaymentController.onSubmit(mode: Mode = CheckMode)

GET        /returns/complete                                    controllers.ReturnsCompleteController.onPageLoad()

GET        /report-online-marketplace-operating-margin          controllers.ReportOnlineMarketplaceOperatingMarginController.onPageLoad(mode: Mode = NormalMode)
POST       /report-online-marketplace-operating-margin          controllers.ReportOnlineMarketplaceOperatingMarginController.onSubmit(mode: Mode = NormalMode)
GET        /edit/report-online-marketplace-operating-margin     controllers.ReportOnlineMarketplaceOperatingMarginController.onPageLoad(mode: Mode = CheckMode)
POST       /edit/report-online-marketplace-operating-margin     controllers.ReportOnlineMarketplaceOperatingMarginController.onSubmit(mode: Mode = CheckMode)

GET        /reportSocialMediaOperatingMargin                    controllers.ReportSocialMediaOperatingMarginController.onPageLoad(mode: Mode = NormalMode)
POST       /reportSocialMediaOperatingMargin                    controllers.ReportSocialMediaOperatingMarginController.onSubmit(mode: Mode = NormalMode)
GET        /changeReportSocialMediaOperatingMargin              controllers.ReportSocialMediaOperatingMarginController.onPageLoad(mode: Mode = CheckMode)
POST       /changeReportSocialMediaOperatingMargin              controllers.ReportSocialMediaOperatingMarginController.onSubmit(mode: Mode = CheckMode)
