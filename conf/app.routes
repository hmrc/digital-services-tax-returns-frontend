# microservice specific routes

->         /hmrc-frontend                                                  hmrcfrontend.Routes

GET        /                                                               controllers.ReturnsDashboardController.onPageLoad

GET        /assets/*file                                                   controllers.Assets.versioned(path="/public", file: Asset)

GET        /sign-in                                                        controllers.auth.AuthenticationController.signIn()
GET        /sign-out                                                       controllers.auth.AuthenticationController.signOut()

GET        /time-out                                                       controllers.auth.AuthenticationController.timeOut()

GET        /refresh-session                                                controllers.KeepAliveController.keepAlive

GET        /there-is-a-problem                                             controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET        /:periodKey/check-your-answers                                  controllers.CheckYourAnswersController.onPageLoad(periodKey: PeriodKey)

GET        /unauthorised                                                   controllers.UnauthorisedController.onPageLoad

GET        /returnsDashboard                                               controllers.ReturnsDashboardController.onPageLoad()

GET        /pay-your-digital-services-tax                                  controllers.PayYourDigitalServiceTaxController.onPageLoad()

GET        /:periodKey/manage-companies/add/:index/company                 controllers.CompanyDetailsController.onPageLoad(periodKey: PeriodKey, index: Index, mode: Mode = NormalMode)
POST       /:periodKey/manage-companies/add/:index/company                 controllers.CompanyDetailsController.onSubmit(periodKey: PeriodKey, index: Index, mode: Mode = NormalMode)
GET        /:periodKey/manage-companies/delete/:index/company              controllers.CompanyDetailsController.onDelete(periodKey: PeriodKey, index: Index, mode: Mode = NormalMode)

GET        /:periodKey/manage-companies/edit/:index/company                controllers.CompanyDetailsController.onPageLoad(periodKey: PeriodKey, index: Index, mode: Mode = CheckMode)
POST       /:periodKey/manage-companies/edit/:index/company                controllers.CompanyDetailsController.onSubmit(periodKey: PeriodKey, index: Index, mode: Mode = CheckMode)
GET        /:periodKey/manage-companies/delete/:index/company              controllers.CompanyDetailsController.onDelete(periodKey: PeriodKey, index: Index, mode: Mode = CheckMode)

GET        /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/manage-companies                                    controllers.ManageCompaniesController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)
GET        /:periodKey/manage-companies/redirect                           controllers.ManageCompaniesController.redirectToOnLoadPage(periodKey: PeriodKey)

GET        /:periodKey/select-activities                                   controllers.SelectActivitiesController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/select-activities                                   controllers.SelectActivitiesController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/select-activities                              controllers.SelectActivitiesController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/select-activities                              controllers.SelectActivitiesController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-social-media-alternative-charge              controllers.ReportMediaAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-social-media-alternative-charge              controllers.ReportMediaAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-social-media-alternative-charge         controllers.ReportMediaAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-social-media-alternative-charge         controllers.ReportMediaAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-social-media-loss                            controllers.SocialMediaLossController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-social-media-loss                            controllers.SocialMediaLossController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-social-media-loss                       controllers.SocialMediaLossController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-social-media-loss                       controllers.SocialMediaLossController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-online-marketplace-alternative-charge        controllers.ReportOnlineMarketplaceAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-online-marketplace-alternative-charge        controllers.ReportOnlineMarketplaceAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-online-marketplace-alternative-charge   controllers.ReportOnlineMarketplaceAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-online-marketplace-alternative-charge   controllers.ReportOnlineMarketplaceAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-search-engine-alternative-charge             controllers.ReportSearchAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-search-engine-alternative-charge             controllers.ReportSearchAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-search-engine-alternative-charge        controllers.ReportSearchAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-search-engine-alternative-charge        controllers.ReportSearchAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/cross-border-transaction-relief-amount              controllers.CrossBorderTransactionReliefController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/cross-border-transaction-relief-amount              controllers.CrossBorderTransactionReliefController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/cross-border-transaction-relief-amount         controllers.CrossBorderTransactionReliefController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/cross-border-transaction-relief-amount         controllers.CrossBorderTransactionReliefController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-alternative-charge                           controllers.ReportAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-alternative-charge                           controllers.ReportAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-alternative-charge                      controllers.ReportAlternativeChargeController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-alternative-charge                      controllers.ReportAlternativeChargeController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-online-marketplace-loss                      controllers.ReportOnlineMarketplaceLossController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-online-marketplace-loss                      controllers.ReportOnlineMarketplaceLossController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-online-marketplace-loss                 controllers.ReportOnlineMarketplaceLossController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-online-marketplace-loss                 controllers.ReportOnlineMarketplaceLossController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-cross-border-transaction-relief              controllers.ReportCrossBorderReliefController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-cross-border-transaction-relief              controllers.ReportCrossBorderReliefController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-cross-border-transaction-relief         controllers.ReportCrossBorderReliefController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-cross-border-transaction-relief         controllers.ReportCrossBorderReliefController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-search-engine-loss                           controllers.SearchEngineLossController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-search-engine-loss                           controllers.SearchEngineLossController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-search-engine-loss                      controllers.SearchEngineLossController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-search-engine-loss                      controllers.SearchEngineLossController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/allowance-deducted                                  controllers.AllowanceDeductedController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/allowance-deducted                                  controllers.AllowanceDeductedController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/allowance-deducted                             controllers.AllowanceDeductedController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/allowance-deducted                             controllers.AllowanceDeductedController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/uk-bank-details                                     controllers.UKBankDetailsController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/uk-bank-details                                     controllers.UKBankDetailsController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/uk-bank-details                                controllers.UKBankDetailsController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/uk-bank-details                                controllers.UKBankDetailsController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/company-liabilities/:index/                         controllers.CompanyLiabilitiesController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode, index:Index)
POST       /:periodKey/company-liabilities/:index/                         controllers.CompanyLiabilitiesController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode, index:Index)
GET        /:periodKey/edit/company-liabilities/:index/                    controllers.CompanyLiabilitiesController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode, index:Index)
POST       /:periodKey/edit/company-liabilities/:index/                    controllers.CompanyLiabilitiesController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode, index:Index)

GET        /:periodKey/is-repayment-bank-account-uk                        controllers.IsRepaymentBankAccountUKController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/is-repayment-bank-account-uk                        controllers.IsRepaymentBankAccountUKController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/is-repayment-bank-account-uk                   controllers.IsRepaymentBankAccountUKController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/is-repayment-bank-account-uk                   controllers.IsRepaymentBankAccountUKController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/bank-details-for-repayment                          controllers.BankDetailsForRepaymentController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/bank-details-for-repayment                          controllers.BankDetailsForRepaymentController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/bank-details-for-repayment                     controllers.BankDetailsForRepaymentController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/bank-details-for-repayment                     controllers.BankDetailsForRepaymentController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/group-liability                                     controllers.GroupLiabilityController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/group-liability                                     controllers.GroupLiabilityController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/group-liability                                controllers.GroupLiabilityController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/group-liability                                controllers.GroupLiabilityController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/repayment                                           controllers.RepaymentController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/repayment                                           controllers.RepaymentController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/repayment                                      controllers.RepaymentController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/repayment                                      controllers.RepaymentController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/returns/complete                                    controllers.ReturnsCompleteController.onPageLoad(periodKey: PeriodKey)

GET        /:periodKey/report-online-marketplace-operating-margin          controllers.ReportOnlineMarketplaceOperatingMarginController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-online-marketplace-operating-margin          controllers.ReportOnlineMarketplaceOperatingMarginController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-online-marketplace-operating-margin     controllers.ReportOnlineMarketplaceOperatingMarginController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-online-marketplace-operating-margin     controllers.ReportOnlineMarketplaceOperatingMarginController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-social-media-operating-margin                controllers.ReportSocialMediaOperatingMarginController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-social-media-operating-margin                controllers.ReportSocialMediaOperatingMarginController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-social-media-operating-margin           controllers.ReportSocialMediaOperatingMarginController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-social-media-operating-margin           controllers.ReportSocialMediaOperatingMarginController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/relief-deducted                                     controllers.ReliefDeductedController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/relief-deducted                                     controllers.ReliefDeductedController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/relief-deducted                                controllers.ReliefDeductedController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/relief-deducted                                controllers.ReliefDeductedController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /:periodKey/report-search-engine-operating-margin               controllers.ReportSearchEngineOperatingMarginController.onPageLoad(periodKey: PeriodKey, mode: Mode = NormalMode)
POST       /:periodKey/report-search-engine-operating-margin               controllers.ReportSearchEngineOperatingMarginController.onSubmit(periodKey: PeriodKey, mode: Mode = NormalMode)
GET        /:periodKey/edit/report-search-engine-operating-margin          controllers.ReportSearchEngineOperatingMarginController.onPageLoad(periodKey: PeriodKey, mode: Mode = CheckMode)
POST       /:periodKey/edit/report-search-engine-operating-margin          controllers.ReportSearchEngineOperatingMarginController.onSubmit(periodKey: PeriodKey, mode: Mode = CheckMode)

GET        /resubmitAReturn                        controllers.ResubmitAReturnController.onPageLoad(mode: Mode = NormalMode)
POST       /resubmitAReturn                        controllers.ResubmitAReturnController.onSubmit(mode: Mode = NormalMode)
GET        /changeResubmitAReturn                  controllers.ResubmitAReturnController.onPageLoad(mode: Mode = CheckMode)
POST       /changeResubmitAReturn                  controllers.ResubmitAReturnController.onSubmit(mode: Mode = CheckMode)
